It serves as a roadmap for the Android system, detailing how the app should function, what
components it includes, and what permissions it requires. Without this file, an Android app
cannot operate.

Why Every App Needs the Android Manifest
1. Component Declaration: The manifest declares all the key components of the app, such as activities,
services, broadcast receivers, and content providers. This registration process is vital because
it informs the Android system about the building blocks of the app, ensuring that these components
can be properly initialized and managed.

2.Permissions Management: The manifest specifies the permissions that the app needs to access
sensitive data or system features, like the internet, camera, or location services. This is crucial
for security and privacy, as it notifies users and the system about what the app intends to access.

3.App Configuration: It provides essential configuration settings for the app, such as the appâ€™s
theme, hardware and software requirements, and even the minimum Android version the app supports.
These settings ensure that the app runs smoothly and only on compatible devices.

4.System Interaction: The manifest also plays a key role in how the app interacts with the Android
operating system, handling tasks like determining which activity should start when the app is
launched, how notifications should be managed

--> Application Metadata
Custom metadata can be declared in the manifest to store configuration information that the app
can access at runtime.

Code Example:
<application ... >
    <!-- Custom metadata -->
    <meta-data
        android:name="com.example.myapp.API_KEY"
        android:value="your_api_key_here" />
</application>

<meta-data>: This tag defines custom metadata that can be used within the app. In this example,
an API key is stored and can be retrieved programmatically.

--> Hardware and Software Features
The manifest allows you to specify the hardware and software features that your app requires,
ensuring that only compatible devices can install the app.

Code Example:
<manifest ... >
    <!-- Requires a camera -->
    <uses-feature android:name="android.hardware.camera" android:required="true" />
    <!-- Requires GPS -->
    <uses-feature android:name="android.hardware.location.gps" />
</manifest>

<uses-feature>: Declares specific hardware features required by the app. The android:required
attribute can be set to true or false depending on whether the feature is mandatory.